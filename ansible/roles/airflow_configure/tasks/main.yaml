# Env files

- name: Copy service environment variable file
  template:
    src: .env.airflow.j2
    dest: "{{ airflow_home_dir }}/.env.airflow"
    mode: 0700

- name: Copy application dotenv file
  template:
    src: .env.j2
    dest: "{{ airflow_repo_dir }}/.env"

- name: Fetch service account file
  google.cloud.gcp_secret_manager:
    auth_kind: machineaccount
    name: "{{ sa_airflow_key }}"
    project: "{{ gcp_project_id }}"
    version: latest
    state: present
  delegate_to: localhost
  register: sa_airflow

- name: Copy service account file
  copy:
    content: "{{ sa_airflow.payload.data | b64decode }}"
    dest: "{{ sa_airflow_filename }}"
    mode: 0400

# Configuration files

- name: Copy webserver configuration file into Airflow home directory
  copy:
    src: webserver_config.py
    dest: "{{ airflow_home_dir }}/webserver_config.py"

- name: Copy webserver service file into systemd
  become: true
  template:
    src: airflow-webserver.service.j2
    dest: /etc/systemd/system/airflow-webserver.service
  register: copy_webserver_service_file_result

- name: Copy webserver run script
  template:
    src: run-webserver.sh.j2
    dest: "{{ airflow_home_dir }}/run-webserver.sh"
    mode: 0700

- name: Copy scheduler service file into systemd
  become: true
  template:
    src: airflow-scheduler.service.j2
    dest: /etc/systemd/system/airflow-scheduler.service
  register: copy_scheduler_service_file_result

- name: Copy scheduler run script
  template:
    src: run-scheduler.sh.j2
    dest: "{{ airflow_home_dir }}/run-scheduler.sh"
    mode: 0700

# Services

- name: Reload systemd daemon
  become: true
  command: systemctl daemon-reload
  when: copy_webserver_service_file_result.changed or copy_scheduler_service_file_result.changed

- name: Migrate database
  shell: "source {{ airflow_home_dir }}/.env.airflow && {{ airflow_venv_dir }}/bin/airflow db migrate"
  args:
    executable: /bin/bash

- name: Start webserver service
  become: true
  systemd:
    name: airflow-webserver.service
    state: restarted
    enabled: yes

- name: Start scheduler service
  become: true
  systemd:
    name: airflow-scheduler.service
    state: restarted
    enabled: yes
