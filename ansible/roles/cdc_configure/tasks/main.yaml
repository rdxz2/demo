# Env files

- name: Copy application dotenv file
  template:
    src: .env.j2
    dest: "{{ cdc_repo_dir }}/.env.{{ item.key }}"
    mode: 0700
  loop: "{{ cdc_targets | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  vars: # Used in template file
    cdc_target: "{{ item.key }}"
    cdc_db_host: "{{ item.value.cdc_db_host }}"
    cdc_db_port: "{{ item.value.cdc_db_port }}"
    cdc_db_user: "{{ item.value.cdc_db_user }}"
    cdc_db_name: "{{ item.value.cdc_db_name }}"
    cdc_db_pass: "{{ cdc_db_passes[item.key] }}"
    cdc_publ_name: "{{ item.value.cdc_publ_name }}"
    cdc_slot_name: "{{ item.value.cdc_slot_name }}"

- name: Fetch service account file
  google.cloud.gcp_secret_manager:
    auth_kind: machineaccount
    name: "{{ sa_cdc_key }}"
    project: "{{ gcp_project_id }}"
    version: latest
    state: present
  delegate_to: localhost
  register: sa_cdc

- name: Copy service account file
  copy:
    content: "{{ sa_cdc.payload.data | b64decode }}"
    dest: "{{ sa_cdc_filename }}"
    mode: 0400

# Configuration files

- name: Create streamer service file into systemd
  become: true
  template:
    src: cdc-streamer.service.j2
    dest: /etc/systemd/system/cdc-streamer-{{ item.key }}.service
  loop: "{{ cdc_targets | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  vars: # Used in template file
    cdc_target: "{{ item.key }}"
  register: copy_streamer_service_file_result

- name: Create uploader service file into systemd
  become: true
  template:
    src: cdc-uploader.service.j2
    dest: /etc/systemd/system/cdc-uploader-{{ item.key }}.service
  loop: "{{ cdc_targets | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  vars: # Used in template file
    cdc_target: "{{ item.key }}"
  register: copy_uploader_service_file_result

# Services

- name: Reload systemd daemon
  become: true
  command: systemctl daemon-reload
  when: copy_streamer_service_file_result.changed or copy_uploader_service_file_result.changed

- name: Start streamer service
  become: true
  systemd:
    name: cdc-streamer-{{ item.key }}.service
    state: restarted
    enabled: yes
  loop: "{{ cdc_targets | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  vars:
    cdc_target: "{{ item.key }}"

- name: Start scheduler service
  become: true
  systemd:
    name: cdc-uploader-{{ item.key }}.service
    state: restarted
    enabled: yes
  loop: "{{ cdc_targets | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  vars:
    cdc_target: "{{ item.key }}"
