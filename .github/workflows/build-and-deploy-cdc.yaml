name: Build and deploy CDC

on:
  push:
    branches:
      - "*"
    # tags:
    #   - "*" # Triggers only on version tags like 0.0.1
    paths:
      - cdc/**

jobs:
  build-and-push-container:
    runs-on: ubuntu-latest
    steps:
      # Configuration

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Docker login to Artifact Registry
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin ${{ vars.AR_REPOSITORY }}

      # Execution

      - name: Build streamer docker image
        run: |
          cd cdc
          docker build -t ${{ vars.AR_REPOSITORY }}/cdc-streamer -f Dockerfile.streamer .

      - name: Build uploader docker image
        run: |
          cd cdc
          docker build -t ${{ vars.AR_REPOSITORY }}/cdc-uploader -f Dockerfile.uploader .

      - name: Push streamer docker image
        run: |
          docker push ${{ vars.AR_REPOSITORY }}/cdc-streamer

      - name: Push uploader docker image
        run: |
          docker push ${{ vars.AR_REPOSITORY }}/cdc-uploader

  ansible-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-container
    steps:
      # Configuration

      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Install packages to run Ansible
        run: |
          pip install -r ansible/requirements.txt

      - name: Install required Ansible Galaxy collections
        run: |
          ansible-galaxy collection install -r ansible/requirements.yaml

      - name: Prepare service account file for Ansible
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo "$GCP_SA_KEY" > ~/sa.json
          chmod 400 ~/sa.json

      - name: Prepare Ansible vault password file
        env:
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
        run: |
          echo "$ANSIBLE_VAULT_PASSWORD" > ~/vault_password
          chmod 400 ~/vault_password

      - name: Prepare SSH credentials for Ansible IAP tunneling
        env:
          SSH_PRIVATE_KEY: ${{ secrets.GCP_SSH_SECRET_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          echo -e "Host *\n  StrictHostKeyChecking no" > ~/.ssh/config

      # Execution

      - name: Run Ansible Playbook
        run: |
          ansible-playbook \
            -e "secret_file=vars/secrets_prod.yaml" \
            -e "sa_gha_filename=~/sa.json" \
            --vault-password-file=~/vault_password \
            -i ansible/inventory/prod.yaml \
            --tags "basic,cdc" \
            ansible/play.yaml
